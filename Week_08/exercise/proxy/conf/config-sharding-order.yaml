schemaName: order

dataSources:
  ds_0:
    url: jdbc:mysql://192.168.199.222:13300/order_0?serverTimezone=UTC&useSSL=false
    username: root
    password: root
    connectionTimeoutMilliseconds: 30000
    idleTimeoutMilliseconds: 60000
    maxLifetimeMilliseconds: 1800000
    maxPoolSize: 50
  ds_1:
    url: jdbc:mysql://192.168.199.222:13300/order_1?serverTimezone=UTC&useSSL=false
    username: root
    password: root
    connectionTimeoutMilliseconds: 30000
    idleTimeoutMilliseconds: 60000
    maxLifetimeMilliseconds: 1800000
    maxPoolSize: 50
  ds_0_slave1:
    url: jdbc:mysql://192.168.199.222:23300/order_0?serverTimezone=UTC&useSSL=false
    username: root
    password: root
    connectionTimeoutMilliseconds: 30000
    idleTimeoutMilliseconds: 60000
    maxLifetimeMilliseconds: 1800000
    maxPoolSize: 50
  ds_0_slave2:
    url: jdbc:mysql://192.168.199.222:33300/order_0?serverTimezone=UTC&useSSL=false
    username: root
    password: root
    connectionTimeoutMilliseconds: 30000
    idleTimeoutMilliseconds: 60000
    maxLifetimeMilliseconds: 1800000
    maxPoolSize: 50
  ds_1_slave1:
    url: jdbc:mysql://192.168.199.222:23300/order_1?serverTimezone=UTC&useSSL=false
    username: root
    password: root
    connectionTimeoutMilliseconds: 30000
    idleTimeoutMilliseconds: 60000
    maxLifetimeMilliseconds: 1800000
    maxPoolSize: 50
  ds_1_slave2:
    url: jdbc:mysql://192.168.199.222:33300/order_1?serverTimezone=UTC&useSSL=false
    username: root
    password: root
    connectionTimeoutMilliseconds: 30000
    idleTimeoutMilliseconds: 60000
    maxLifetimeMilliseconds: 1800000
    maxPoolSize: 50
rules:
  - !SHARDING
    tables:
      order:
        actualDataNodes: rw_ds_${0..1}.order_${0..15}
        tableStrategy:
          standard:
            shardingColumn: user_id
            shardingAlgorithmName: order_inline
        # keyGenerateStrategy:
        #   column: order_id
    bindingTables:
      - order
    defaultDatabaseStrategy:
      standard:
        shardingColumn: user_id
        shardingAlgorithmName: database_inline
    defaultTableStrategy:
      none:
    shardingAlgorithms:
      database_inline:
        type: INLINE
        props:
          algorithm-expression: rw_ds_${user_id % 2}
      order_inline:
        type: INLINE
        props:
          algorithm-expression: order_${user_id % 16}
  - !READWRITE_SPLITTING
    dataSources:
      rw_ds_0:
        name: rw_ds_0 # 读写分离的逻辑数据源名称 `rw_ds_0` 用于在数据分片中使用
        writeDataSourceName: ds_0 # 使用真实存在的数据源名称 `ds_0`
        readDataSourceNames:
          - ds_0_slave1 # 使用真实存在的数据源名称 `ds_0_slave1`
          - ds_0_slave2 # 使用真实存在的数据源名称 `ds_0_slave2`
        loadBalancerName: roundRobin
      rw_ds_1:
        name: rw_ds_1 # 读写分离的逻辑数据源名称 `rw_ds_1` 用于在数据分片中使用
        writeDataSourceName: ds_1 # 使用真实存在的数据源名称 `ds_1`
        readDataSourceNames:
          - ds_1_slave1 # 使用真实存在的数据源名称 `ds_1_slave1`
          - ds_1_slave2 # 使用真实存在的数据源名称 `ds_1_slave2`
        loadBalancerName: roundRobin
    loadBalancers:
      roundRobin:
        type: ROUND_ROBIN